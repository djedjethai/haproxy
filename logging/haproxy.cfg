global
	log 127.0.0.1 local0 info
	log 127.0.0.1 local1 notice
	maxconn 4096
	description Our awesome HAProxy Stats page # that is going with show-legends

defaults
	mode http
	log global
	option dontlognull
	timeout connect 5s
	timeout client 60s
	timeout server 60s
	errorfile 400 /usr/local/etc/haproxy/errors/400.http
	errorfile 403 /usr/local/etc/haproxy/errors/403.http
	errorfile 408 /usr/local/etc/haproxy/errors/408.http
	errorfile 500 /usr/local/etc/haproxy/errors/500.http
	errorfile 502 /usr/local/etc/haproxy/errors/502.http
	errorfile 503 /usr/local/etc/haproxy/errors/503.http
	errorfile 504 /usr/local/etc/haproxy/errors/504.http

listen  stats
    	bind *:1936
    	mode http
    	stats enable
    	stats refresh 30s # refresh the page
    	stats auth admin:password # set the auth(if not, no auth)
    	stats hide-version
    	stats realm Haproxy\ Statistics
    	stats uri /
	stats show-desc # this allow to show the description in the global directives
	stats show-legends # for the UI to show the legends
	stats admin if TRUE # allow the servers' administration from the UI
    	# bind *:9000 ssl crt /etc/ssl/certs/mycert.pem # with ssl


frontend myfrontend
	mode tcp
	timeout client 5m
	bind *:33306
	default_backend mysqlservers_admin

backend mysqlservers_admin
	mode tcp
	balance leastconn
	timeout server 5m
	server db1 mysql:3306


# frontend myfrontend
# 	bind *:80
#   	default_backend mybackend
# 	acl srv_down nbsrv(mybackend) lt 1
# 	use_backend backupbackend if srv_down
# 
# # the option(as it fail) will set this srv as down
# # then from the frontend directive it will redirect on backupbackend	
# backend mybackend
#   	server web1 web1:80 check
#   	server web2 web2:80 check
#   	option httpchk GET /test
# 
# backend backupbackend
#   	server web2 web2:80 check

