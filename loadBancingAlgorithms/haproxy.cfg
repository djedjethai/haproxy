global
	log 127.0.0.1 local0
	log 127.0.0.1 local1 notice
	maxconn 4096
	description Our awesome HAProxy Stats page # that is going with show-legends

defaults
	mode http
	log global
	option dontlognull
	timeout connect 5s
	timeout client 60s
	timeout server 60s
	errorfile 400 /usr/local/etc/haproxy/errors/400.http
	errorfile 403 /usr/local/etc/haproxy/errors/403.http
	errorfile 408 /usr/local/etc/haproxy/errors/408.http
	errorfile 500 /usr/local/etc/haproxy/errors/500.http
	errorfile 502 /usr/local/etc/haproxy/errors/502.http
	errorfile 503 /usr/local/etc/haproxy/errors/503.http
	errorfile 504 /usr/local/etc/haproxy/errors/504.http

listen  stats
    	bind *:1936
    	mode http
    	stats enable
    	stats refresh 30s # refresh the page
    	stats auth admin:password # set the auth(if not, no auth)
    	stats hide-version
    	stats realm Haproxy\ Statistics
    	stats uri /
	stats show-desc # this allow to show the description in the global directives
	stats show-legends # for the UI to show the legends
	stats admin if TRUE # allow the servers' administration from the UI
    	# bind *:9000 ssl crt /etc/ssl/certs/mycert.pem # with ssl


#======= roundrobin ========
listen myproxy
	bind *:80
	balance roundrobin
	server web1 web1:80 check
	server web2 web2:80 check

#======= weighted roundrobin ========
listen weighted
	bind *:81
	balance roundrobin
	server web1 web1:80 check weight 1
	server web2 web2:80 check weight 3

#======= leastconn(think about slowstart, important !!!) ========
listen leastconn
	bind *:82
	balance leastconn
	server web1 web1:80 check slowstart 60s 
	server web2 web2:80 check slowstart 60s

#======= weighted leastconn(does not work for me !!!!) ========
listen weightedleastconn
	bind *:83
	balance leastconn
	server web1 web1:80 check slowstart 60s weight 4
	server web2 web2:80 check slowstart 60s weight 1

#======= uri(note that I could have used only one block listen) ========
frontend mywebsite
	bind *:84
	mode http
	default_backend uri

backend uri
	# balance uri 
	balance uri whole # if want to include the query params
	server web1 web1:80 check 
	# server web1 web1:80 check weight 1 # will balance the load as expected 
	server web2 web2:80 check
	# server web2 web2:80 check weight 4

#======= first available ================================
listen first
	bind *:85
	balance first
	server web1 web1:80 maxconn 20
	server web2 web2:80 maxconn 20



